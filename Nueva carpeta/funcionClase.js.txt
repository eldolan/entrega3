// Modelo de datos para los eventos
class Evento {
    constructor(nombre, fecha, color, esExamenFinal = false) {
        this.nombre = nombre;
        this.fecha = fecha; // Formato: 'YYYY-MM-DD'
        this.color = color;
        this.esExamenFinal = esExamenFinal;
    }
}

// Almacenamiento para los eventos
let eventos = [];

// Event listener para el formulario
document.getElementById('formularioEvento').addEventListener('submit', function(event) {
    event.preventDefault();

    // Obtener valores del formulario
    const nombre = document.getElementById('nombreEvento').value;
    const fecha = document.getElementById('fechaEvento').value;
    const color = document.getElementById('colorEvento').value;
    const esExamenFinal = document.getElementById('checkExamenFinal').checked; // Checkbox para examen final

    // Crear y almacenar el evento
    const evento = new Evento(nombre, fecha, color, esExamenFinal);
    eventos.push(evento);

    // Actualizar la visualización del calendario
    actualizarCalendario();
});

function actualizarCalendario() {
    // Lógica para actualizar el calendario con los eventos
    // ...
}
// Función para agregar un evento al calendario
function agregarEvento(nombre, fecha, color) {
    const nuevoEvento = new Evento(nombre, fecha, color);
    eventos.push(nuevoEvento);
    actualizarCalendarioConEvento(nuevoEvento);
    guardarEventos();
}

// Función para actualizar el calendario con un nuevo evento
function actualizarCalendarioConEvento(evento) {
    const mesEvento = new Date(evento.fecha).getMonth();
    const contenedorMes = document.getElementsByClassName('mes')[mesEvento];

    // Crear un nuevo elemento para el evento
    const elementoEvento = document.createElement('div');
    elementoEvento.textContent = new Date(evento.fecha).getDate();
    elementoEvento.style.backgroundColor = evento.color;
    elementoEvento.classList.add('clase');

    contenedorMes.appendChild(elementoEvento);
}

// Función para guardar eventos en localStorage
function guardarEventos() {
    localStorage.setItem('eventos', JSON.stringify(eventos));
}

// Función para cargar eventos de localStorage
function cargarEventos() {
    const eventosAlmacenados = localStorage.getItem('eventos');
    if (eventosAlmacenados) {
        eventos = JSON.parse(eventosAlmacenados);
        eventos.forEach(evento => actualizarCalendarioConEvento(evento));
    }
}


document.addEventListener('DOMContentLoaded', cargarEventos);



function main() {
}

main();
